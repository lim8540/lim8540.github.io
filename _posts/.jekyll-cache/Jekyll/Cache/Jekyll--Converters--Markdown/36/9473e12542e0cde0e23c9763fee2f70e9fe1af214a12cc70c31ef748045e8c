I"<h2 id="더-맵게python에서-heap-사용하기">더 맵게(python에서 heap 사용하기)</h2>

<p>문제: <a href="https://programmers.co.kr/learn/courses/30/lessons/42626">Programmers</a></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kn">import</span> <span class="nn">heapq</span>

<span class="k">def</span> <span class="nf">solution</span><span class="p">(</span><span class="n">scoville</span><span class="p">,</span> <span class="n">K</span><span class="p">):</span>
    <span class="n">answer</span> <span class="o">=</span> <span class="mi">0</span>
    <span class="c1"># 리스트 scoville로 부터 min heap구성
</span>    <span class="n">heapq</span><span class="p">.</span><span class="n">heapify</span><span class="p">(</span><span class="n">scoville</span><span class="p">)</span>
    <span class="k">while</span> <span class="bp">True</span><span class="p">:</span>
        <span class="c1"># min heap scoville 에서 최소값 삭제(반환)
</span>        <span class="n">min1</span> <span class="o">=</span> <span class="n">heapq</span><span class="p">.</span><span class="n">heappop</span><span class="p">(</span><span class="n">scoville</span><span class="p">)</span>
        <span class="k">if</span> <span class="n">min1</span> <span class="o">&gt;=</span> <span class="n">K</span><span class="p">:</span>
            <span class="k">break</span>
        <span class="k">elif</span> <span class="nb">len</span><span class="p">(</span><span class="n">scoville</span><span class="p">)</span> <span class="o">==</span> <span class="mi">0</span><span class="p">:</span>
            <span class="n">answer</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
            <span class="k">break</span>
        <span class="n">min2</span> <span class="o">=</span> <span class="n">heapq</span><span class="p">.</span><span class="n">heappop</span><span class="p">(</span><span class="n">scoville</span><span class="p">)</span>
        <span class="n">new_scoville</span> <span class="o">=</span> <span class="n">min1</span> <span class="o">+</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">min2</span>
        <span class="c1"># min heap scoville 에 원소 new_scoville 삽입
</span>        <span class="n">heapq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">scoville</span><span class="p">,</span> <span class="n">new_scoville</span><span class="p">)</span>
        <span class="n">answer</span> <span class="o">+=</span> <span class="mi">1</span>
    <span class="k">return</span> <span class="n">answer</span>

</code></pre></div></div>

<p>python에서 heap의 사용은 heapq library를 import해서 사용할 수 있다. 위에서 보이는 것처럼 list를 힙으로 바꾸어 줄 때는 다음과 같으 heapify를 사용한다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">heapq</span><span class="p">.</span><span class="n">heapify</span><span class="p">(</span><span class="n">L</span><span class="p">)</span>
</code></pre></div></div>
<p>heap에서 자료를 빼내고 삽입할때는 각각 heappop, heappush를 써준다. heap L에서 가장 작은 값을 빼주는 방법과 L에 새로운 원소 new_item을 삽입하는 방법은 아래와 같다.</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">m</span> <span class="o">=</span> <span class="n">heapq</span><span class="p">.</span><span class="n">heappop</span><span class="p">(</span><span class="n">L</span><span class="p">)</span>
<span class="n">heaqq</span><span class="p">.</span><span class="n">heappush</span><span class="p">(</span><span class="n">L</span><span class="p">,</span> <span class="n">new_item</span><span class="p">)</span>
</code></pre></div></div>

<h2 id="python의-zip">python의 zip</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">A</span> <span class="o">=</span> <span class="p">[</span><span class="n">a1</span><span class="p">,</span> <span class="n">a2</span><span class="p">,</span> <span class="n">a3</span><span class="p">,</span> <span class="n">a4</span><span class="p">]</span>
<span class="n">B</span> <span class="o">=</span> <span class="p">[</span><span class="n">b1</span><span class="p">,</span> <span class="n">b2</span> <span class="p">,</span><span class="n">b3</span><span class="p">,</span> <span class="n">b4</span><span class="p">]</span>
<span class="k">for</span> <span class="n">x</span><span class="p">,</span> <span class="n">y</span> <span class="ow">in</span> <span class="nb">zip</span><span class="p">(</span><span class="n">A</span><span class="p">,</span> <span class="n">B</span><span class="p">):</span> <span class="c1">#[(a1,b1), (a2, b2), (a3, b3)]
</span><span class="p">...</span>
</code></pre></div></div>
<p>여러개의 리스트에서 동시에 원소를 뽑아낼 때 사용함.</p>
:ET