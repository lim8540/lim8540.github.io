I"%P<h2 id="0-가상환경-설치하기">0. 가상환경 설치하기</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 파이썬 가상환경 모듈 설치</span>
  <span class="nv">$ </span>pip <span class="nb">install </span>cirtualenv
<span class="c"># 현재 디렉토리에 새 virtualenv 가상환경 만들기</span>
  <span class="nv">$ </span>virtualenv &lt;가상환경 이름&gt;
<span class="c"># 가상환경에 진입(mac)</span>
  <span class="nv">$ </span><span class="nb">source</span> &lt;가상환경 이름&gt;/bin/activate
</code></pre></div></div>

<h2 id="1-flask-설치">1. Flask 설치</h2>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 설치되어 있는 Framework나  패키지 확인</span>
  <span class="nv">$ </span>pip freeze
<span class="c"># flask 설치</span>
  <span class="nv">$ </span>pip <span class="nb">install </span>flask
</code></pre></div></div>

<h2 id="2-flask-시작하기">2. Flask 시작하기</h2>
<p>app.py</p>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span>

<span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>

<span class="c1"># '/'를 만나면 아래를 실행
</span><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">hello_flask</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">"Hello World!"</span>

<span class="c1"># 모듈이 아니라 직접 실행될 때 수행.
</span><span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">app</span><span class="p">.</span><span class="n">run</span><span class="p">()</span>
</code></pre></div></div>

<h2 id="3-get-post-구현">3. GET, POST 구현</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c1"># GET /menus | 자료를 가져온다
</span><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/menus'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_menus</span><span class="p">():</span>
    <span class="c1"># List 는 json으로 만들 수 없으므로, 딕셔너리의 형태로 넣어줘야함
</span>    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"menus"</span><span class="p">:</span><span class="n">menus</span><span class="p">})</span>


<span class="c1"># POST /menus | 자료를 자원에 추가한다.
</span><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/menus'</span><span class="p">,</span> <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'POST'</span><span class="p">])</span> <span class="c1"># methods의 default값은 'GET'
</span><span class="k">def</span> <span class="nf">create_menu</span><span class="p">():</span> <span class="c1"># request가 JSON이라고 가정
</span>    <span class="c1"># 전달받은 자료를 menus 자원에 추가
</span>    <span class="n">request_data</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">get_json</span><span class="p">()</span> <span class="c1"># {"name": ..., "price": ...}
</span>    <span class="n">new_menu</span> <span class="o">=</span> <span class="p">{</span>
        <span class="s">"id"</span> <span class="p">:</span> <span class="mi">4</span><span class="p">,</span>
        <span class="s">"name"</span> <span class="p">:</span> <span class="n">request_data</span><span class="p">[</span><span class="s">'name'</span><span class="p">],</span>
        <span class="s">"price"</span> <span class="p">:</span> <span class="n">request_data</span><span class="p">[</span><span class="s">'price'</span><span class="p">]</span>
    <span class="p">}</span>
    <span class="n">menus</span><span class="p">.</span><span class="n">append</span><span class="p">(</span><span class="n">new_menu</span><span class="p">)</span>
    <span class="k">return</span> <span class="n">jsonify</span><span class="p">(</span><span class="n">new_menu</span><span class="p">)</span>

</code></pre></div></div>

<h2 id="4-put-delete-구현">4. PUT, DELETE 구현</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/menu/&lt;int:id&gt;'</span><span class="p">,</span> <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'PUT'</span><span class="p">,</span> <span class="s">'DELETE'</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">modify_menu</span><span class="p">(</span><span class="nb">id</span><span class="p">):</span>
    <span class="c1"># method를 같은 route에서 여러 개 받을 수 있게 처리하는 방법.
</span>    <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'PUT'</span><span class="p">:</span>
        <span class="n">request_data</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">get_json</span><span class="p">()</span>
        <span class="k">for</span> <span class="n">m</span> <span class="ow">in</span> <span class="n">menus</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">m</span><span class="p">[</span><span class="s">"id"</span><span class="p">]</span> <span class="o">==</span> <span class="nb">id</span><span class="p">:</span>
                <span class="n">m</span><span class="p">[</span><span class="s">"name"</span><span class="p">]</span> <span class="o">=</span> <span class="n">request_data</span><span class="p">[</span><span class="s">"name"</span><span class="p">]</span>
                <span class="n">m</span><span class="p">[</span><span class="s">"price"</span><span class="p">]</span> <span class="o">=</span> <span class="n">request_data</span><span class="p">[</span><span class="s">"price"</span><span class="p">]</span>
                <span class="k">break</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"menus"</span><span class="p">:</span><span class="n">menus</span><span class="p">})</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="n">del_idx</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span>
        <span class="k">for</span> <span class="n">i</span><span class="p">,</span> <span class="n">m</span> <span class="ow">in</span> <span class="nb">enumerate</span><span class="p">(</span><span class="n">menus</span><span class="p">):</span>
            <span class="k">if</span> <span class="n">m</span><span class="p">[</span><span class="s">"id"</span><span class="p">]</span> <span class="o">==</span> <span class="nb">id</span><span class="p">:</span>
                <span class="n">del_idx</span> <span class="o">=</span> <span class="n">i</span>
                <span class="k">break</span>
        <span class="k">if</span> <span class="n">del_idx</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
            <span class="k">del</span> <span class="n">menus</span><span class="p">[</span><span class="n">del_idx</span><span class="p">]</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"menus"</span><span class="p">:</span><span class="n">menus</span><span class="p">})</span>
</code></pre></div></div>

<h2 id="과제--db연결하기">과제 : DB연결하기</h2>
<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">jsonify</span><span class="p">,</span> <span class="n">request</span>
<span class="kn">from</span> <span class="nn">flask_sqlalchemy</span> <span class="kn">import</span> <span class="n">SQLAlchemy</span>
<span class="kn">import</span> <span class="nn">os</span>

<span class="n">project_dir</span> <span class="o">=</span> <span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">dirname</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">abspath</span><span class="p">(</span><span class="n">__file__</span><span class="p">))</span>
<span class="n">database_file</span> <span class="o">=</span> <span class="s">"sqlite:///{}"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="n">os</span><span class="p">.</span><span class="n">path</span><span class="p">.</span><span class="n">join</span><span class="p">(</span><span class="n">project_dir</span><span class="p">,</span> <span class="s">"cafe_menu.db"</span><span class="p">))</span>
<span class="n">app</span> <span class="o">=</span> <span class="n">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>
<span class="n">app</span><span class="p">.</span><span class="n">config</span><span class="p">[</span><span class="s">"SQLALCHEMY_DATABASE_URI"</span><span class="p">]</span> <span class="o">=</span> <span class="n">database_file</span>
<span class="n">app</span><span class="p">.</span><span class="n">config</span><span class="p">[</span><span class="s">"SQLALCHEMY_TRACK_MODIFICATIONS"</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>

<span class="n">db</span> <span class="o">=</span> <span class="n">SQLAlchemy</span><span class="p">(</span><span class="n">app</span><span class="p">)</span>



<span class="k">class</span> <span class="nc">Menu</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Model</span><span class="p">):</span>
    <span class="nb">id</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">primary_key</span> <span class="o">=</span> <span class="bp">True</span><span class="p">)</span>
    <span class="n">name</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">String</span><span class="p">(</span><span class="mi">50</span><span class="p">),</span> <span class="n">nullable</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>
    <span class="n">price</span> <span class="o">=</span> <span class="n">db</span><span class="p">.</span><span class="n">Column</span><span class="p">(</span><span class="n">db</span><span class="p">.</span><span class="n">Integer</span><span class="p">,</span> <span class="n">nullable</span> <span class="o">=</span> <span class="bp">False</span><span class="p">)</span>



<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">hello_flask</span><span class="p">():</span>
    <span class="k">return</span> <span class="s">"Hello World!"</span>

<span class="c1"># GET /menus | 자료를 가져온다
</span><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/menus'</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">get_menus</span><span class="p">():</span>
    <span class="n">menus</span> <span class="o">=</span> <span class="n">Menu</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="nb">all</span><span class="p">()</span>
    <span class="c1"># List 는 json으로 만들 수 없으므로, 딕셔너리의 형태로 넣어줘야함
</span>    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"menus"</span> <span class="p">:</span> <span class="p">[{</span><span class="s">"id"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="nb">id</span><span class="p">,</span> <span class="s">"name"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="n">name</span> <span class="p">,</span> <span class="s">"price"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="n">price</span><span class="p">}</span> <span class="k">for</span> <span class="n">new_menu</span> <span class="ow">in</span> <span class="n">menus</span><span class="p">]})</span>


<span class="c1"># POST /menus | 자료를 자원에 추가한다.
</span><span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/menus'</span><span class="p">,</span> <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'POST'</span><span class="p">])</span> <span class="c1"># methods의 default값은 'GET'
</span><span class="k">def</span> <span class="nf">create_menu</span><span class="p">():</span> <span class="c1"># request가 JSON이라고 가정
</span>    <span class="n">request_data</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">get_json</span><span class="p">()</span>
    <span class="c1"># 전달받은 자료를 menus 자원에 추가
</span>    <span class="n">new_menu</span> <span class="o">=</span> <span class="n">Menu</span><span class="p">(</span><span class="n">name</span> <span class="o">=</span> <span class="n">request_data</span><span class="p">[</span><span class="s">"name"</span><span class="p">],</span> <span class="n">price</span> <span class="o">=</span> <span class="n">request_data</span><span class="p">[</span><span class="s">"price"</span><span class="p">])</span>
    <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">new_menu</span><span class="p">)</span>
    <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
    <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"id"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="nb">id</span><span class="p">,</span> <span class="s">"name"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="n">name</span> <span class="p">,</span> <span class="s">"price"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="n">price</span><span class="p">})</span>

<span class="o">@</span><span class="n">app</span><span class="p">.</span><span class="n">route</span><span class="p">(</span><span class="s">'/menu/&lt;int:id_&gt;'</span><span class="p">,</span> <span class="n">methods</span> <span class="o">=</span> <span class="p">[</span><span class="s">'PUT'</span><span class="p">,</span> <span class="s">'DELETE'</span><span class="p">])</span>
<span class="k">def</span> <span class="nf">modify_menu</span><span class="p">(</span><span class="n">id_</span><span class="p">):</span>
    <span class="n">menu</span> <span class="o">=</span> <span class="n">Menu</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="n">filter_by</span><span class="p">(</span><span class="nb">id</span> <span class="o">=</span> <span class="n">id_</span><span class="p">).</span><span class="n">first</span><span class="p">()</span>
    <span class="c1"># method를 같은 route에서 여러 개 받을 수 있게 처리하는 방법.
</span>    <span class="k">if</span> <span class="n">request</span><span class="p">.</span><span class="n">method</span> <span class="o">==</span> <span class="s">'PUT'</span><span class="p">:</span>
        <span class="n">request_data</span> <span class="o">=</span> <span class="n">request</span><span class="p">.</span><span class="n">get_json</span><span class="p">()</span>
        <span class="n">menu</span><span class="p">.</span><span class="n">name</span> <span class="o">=</span> <span class="n">request_data</span><span class="p">[</span><span class="s">"name"</span><span class="p">]</span>
        <span class="n">menu</span><span class="p">.</span><span class="n">price</span> <span class="o">=</span> <span class="n">request_data</span><span class="p">[</span><span class="s">"price"</span><span class="p">]</span>
        <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>

        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"id"</span> <span class="p">:</span> <span class="n">menu</span><span class="p">.</span><span class="nb">id</span><span class="p">,</span> <span class="s">"name"</span> <span class="p">:</span> <span class="n">menu</span><span class="p">.</span><span class="n">name</span> <span class="p">,</span> <span class="s">"price"</span> <span class="p">:</span> <span class="n">menu</span><span class="p">.</span><span class="n">price</span><span class="p">})</span>

    <span class="k">else</span><span class="p">:</span>
        <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">delete</span><span class="p">(</span><span class="n">menu</span><span class="p">)</span>
        <span class="n">db</span><span class="p">.</span><span class="n">session</span><span class="p">.</span><span class="n">commit</span><span class="p">()</span>
        <span class="n">menus</span> <span class="o">=</span> <span class="n">Menu</span><span class="p">.</span><span class="n">query</span><span class="p">.</span><span class="nb">all</span><span class="p">()</span>
        <span class="k">return</span> <span class="n">jsonify</span><span class="p">({</span><span class="s">"menus"</span> <span class="p">:</span> <span class="p">[{</span><span class="s">"id"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="nb">id</span><span class="p">,</span> <span class="s">"name"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="n">name</span> <span class="p">,</span> <span class="s">"price"</span> <span class="p">:</span> <span class="n">new_menu</span><span class="p">.</span><span class="n">price</span><span class="p">}</span> <span class="k">for</span> <span class="n">new_menu</span> <span class="ow">in</span> <span class="n">menus</span><span class="p">]})</span>


<span class="k">if</span> <span class="n">__name__</span> <span class="o">==</span> <span class="s">'__main__'</span><span class="p">:</span>
    <span class="n">db</span><span class="p">.</span><span class="n">create_all</span><span class="p">()</span>
    <span class="n">app</span><span class="p">.</span><span class="n">run</span><span class="p">()</span>
</code></pre></div></div>
:ET