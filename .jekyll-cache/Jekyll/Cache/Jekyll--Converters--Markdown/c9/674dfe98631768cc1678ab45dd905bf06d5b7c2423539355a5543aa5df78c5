I".`<h3 id="tensorflow-및-기타-라이브러리-가져오기">TensorFlow 및 기타 라이브러리 가져오기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">absolute_import</span><span class="p">,</span> <span class="n">division</span><span class="p">,</span> <span class="n">print_function</span><span class="p">,</span> <span class="n">unicode_literals</span>
<span class="kn">import</span> <span class="nn">os</span>
<span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="nn">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="k">try</span><span class="p">:</span>
  <span class="o">%</span><span class="n">tensorflow_version</span> <span class="mf">2.</span><span class="n">x</span>
<span class="k">except</span> <span class="nb">Exception</span><span class="p">:</span>
  <span class="k">pass</span>
<span class="kn">import</span> <span class="nn">tensorflow</span> <span class="k">as</span> <span class="n">tf</span>

<span class="n">keras</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span>

<span class="k">print</span><span class="p">(</span><span class="n">tf</span><span class="p">.</span><span class="n">__version__</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>2.4.0
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">IMG_SIZE</span> <span class="o">=</span> <span class="mi">224</span>
<span class="n">EPOCHS</span> <span class="o">=</span> <span class="mi">3</span>
<span class="n">BATCH_SIZE</span> <span class="o">=</span> <span class="mi">128</span>
<span class="n">learning_Rate</span> <span class="o">=</span> <span class="mf">0.001</span>
</code></pre></div></div>

<h3 id="데이터-세트-다운로드-및-탐색">데이터 세트 다운로드 및 탐색</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="nn">keras.datasets</span> <span class="kn">import</span> <span class="n">cifar10</span>
<span class="kn">from</span> <span class="nn">keras.utils</span> <span class="kn">import</span> <span class="n">np_utils</span>
<span class="kn">import</span> <span class="nn">tensorflow_datasets</span> <span class="k">as</span> <span class="n">tfds</span>

<span class="n">tfds</span><span class="p">.</span><span class="n">disable_progress_bar</span><span class="p">()</span>

<span class="c1"># 분류할 클래스 개수
</span><span class="n">num_classes</span> <span class="o">=</span> <span class="mi">10</span> <span class="c1">#Cifar10의 클래스 개수
</span>
<span class="p">(</span><span class="n">raw_train</span><span class="p">,</span> <span class="n">raw_validation</span><span class="p">,</span> <span class="n">raw_test</span><span class="p">),</span> <span class="n">metadata</span> <span class="o">=</span> <span class="n">tfds</span><span class="p">.</span><span class="n">load</span><span class="p">(</span>
    <span class="s">'cifar10'</span><span class="p">,</span>
    <span class="n">split</span> <span class="o">=</span> <span class="p">[</span><span class="s">'train[:90%]'</span><span class="p">,</span> <span class="s">'train[90%:]'</span><span class="p">,</span> <span class="s">'test'</span><span class="p">],</span>
    <span class="n">with_info</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
    <span class="n">as_supervised</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span>
<span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="s">"Train data 개수 : "</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">raw_train</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"val data 개수 : "</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">raw_validation</span><span class="p">))</span>
<span class="k">print</span><span class="p">(</span><span class="s">"Test data 개수 : "</span><span class="p">,</span> <span class="nb">len</span><span class="p">(</span><span class="n">raw_test</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1mDownloading and preparing dataset cifar10/3.0.2 (download: 162.17 MiB, generated: 132.40 MiB, total: 294.58 MiB) to /root/tensorflow_datasets/cifar10/3.0.2...[0m
Shuffling and writing examples to /root/tensorflow_datasets/cifar10/3.0.2.incompleteXM0LKK/cifar10-train.tfrecord
Shuffling and writing examples to /root/tensorflow_datasets/cifar10/3.0.2.incompleteXM0LKK/cifar10-test.tfrecord
[1mDataset cifar10 downloaded and prepared to /root/tensorflow_datasets/cifar10/3.0.2. Subsequent calls will reuse this data.[0m
Train data 개수 :  45000
val data 개수 :  5000
Test data 개수 :  10000
</code></pre></div></div>

<h3 id="데이터-정규화tfimage-모듈을-사용하여-이미지를-정규화">데이터 정규화(tf.image 모듈을 사용하여 이미지를 정규화)</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">foramt_example</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">label</span><span class="p">):</span>
  <span class="n">image</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">cast</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="n">tf</span><span class="p">.</span><span class="n">float32</span><span class="p">)</span>
  <span class="n">image</span> <span class="o">=</span> <span class="p">(</span><span class="n">image</span><span class="o">/</span><span class="mf">127.5</span><span class="p">)</span> <span class="o">-</span> <span class="mi">1</span>
  <span class="n">image</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">image</span><span class="p">.</span><span class="n">resize</span><span class="p">(</span><span class="n">image</span><span class="p">,</span> <span class="p">(</span><span class="n">IMG_SIZE</span><span class="p">,</span> <span class="n">IMG_SIZE</span><span class="p">))</span>
  <span class="k">return</span> <span class="n">image</span><span class="p">,</span> <span class="n">label</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># map 함수를 사용하여 데이터셋의 각 항목에 데이터 포맷 함수를 적용
</span><span class="n">train</span> <span class="o">=</span> <span class="n">raw_train</span><span class="p">.</span><span class="nb">map</span><span class="p">(</span><span class="n">foramt_example</span><span class="p">)</span>
<span class="n">validation</span> <span class="o">=</span> <span class="n">raw_validation</span><span class="p">.</span><span class="nb">map</span><span class="p">(</span><span class="n">foramt_example</span><span class="p">)</span>
<span class="n">test</span> <span class="o">=</span> <span class="n">raw_test</span><span class="p">.</span><span class="nb">map</span><span class="p">(</span><span class="n">foramt_example</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="데이터-세트-만들기">데이터 세트 만들기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">SHUFFLE_BUFFER_SIZE</span> <span class="o">=</span> <span class="mi">1000</span>
<span class="n">train_batches</span> <span class="o">=</span> <span class="n">train</span><span class="p">.</span><span class="n">shuffle</span><span class="p">(</span><span class="n">SHUFFLE_BUFFER_SIZE</span><span class="p">).</span><span class="n">batch</span><span class="p">(</span><span class="n">BATCH_SIZE</span><span class="p">)</span>
<span class="n">validation_batches</span> <span class="o">=</span> <span class="n">validation</span><span class="p">.</span><span class="n">batch</span><span class="p">(</span><span class="n">BATCH_SIZE</span><span class="p">)</span>
<span class="n">test_batches</span> <span class="o">=</span> <span class="n">test</span><span class="p">.</span><span class="n">batch</span><span class="p">(</span><span class="n">BATCH_SIZE</span><span class="p">)</span>
</code></pre></div></div>

<h3 id="데이터-검사하기">데이터 검사하기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 데이터 가시화
</span><span class="n">get_label_name</span> <span class="o">=</span> <span class="n">metadata</span><span class="p">.</span><span class="n">features</span><span class="p">[</span><span class="s">'label'</span><span class="p">].</span><span class="n">int2str</span>

<span class="k">for</span> <span class="n">image</span><span class="p">,</span> <span class="n">label</span> <span class="ow">in</span> <span class="n">raw_train</span><span class="p">.</span><span class="n">take</span><span class="p">(</span><span class="mi">2</span><span class="p">):</span>
  <span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">()</span>
  <span class="n">plt</span><span class="p">.</span><span class="n">imshow</span><span class="p">(</span><span class="n">image</span><span class="p">)</span>
  <span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="n">get_label_name</span><span class="p">(</span><span class="n">label</span><span class="p">))</span>
</code></pre></div></div>

<p><img src="/image/VGGNet16_Training%28Tensorflow_Version%29_files/VGGNet16_Training%28Tensorflow_Version%29_11_0.png" alt="png" /></p>

<p><img src="/image/VGGNet16_Training%28Tensorflow_Version%29_files/VGGNet16_Training%28Tensorflow_Version%29_11_1.png" alt="png" /></p>

<h3 id="사용할-cnn모델-불러오기">사용할 CNN모델 불러오기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">IMG_SHAPE</span> <span class="o">=</span> <span class="p">(</span><span class="n">IMG_SIZE</span><span class="p">,</span> <span class="n">IMG_SIZE</span><span class="p">,</span> <span class="mi">3</span><span class="p">)</span>

<span class="c1"># CNN 모델 변경하려면 여기서 변경
# imageNet으로 사전 훈련된 모델 불러오기
</span>
<span class="n">base_model</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">applications</span><span class="p">.</span><span class="n">VGG16</span><span class="p">(</span>
    <span class="n">input_shape</span> <span class="o">=</span> <span class="n">IMG_SHAPE</span><span class="p">,</span>
    <span class="n">include_top</span> <span class="o">=</span> <span class="bp">True</span><span class="p">,</span> <span class="c1"># 특징 추출하는 부분과 분류하는 부분까지 함께 로드 False는 특징 추출 부분만 가져옴
</span>    <span class="n">classes</span> <span class="o">=</span> <span class="mi">1000</span><span class="p">,</span>
    <span class="n">weights</span> <span class="o">=</span> <span class="s">'imagenet'</span>
<span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg16/vgg16_weights_tf_dim_ordering_tf_kernels.h5
553467904/553467096 [==============================] - 3s 0us/step
</code></pre></div></div>

<h3 id="불러온-모델에서-데이터-셋의-클래스-수에-맞게-최종-분류층-교체">불러온 모델에서 데이터 셋의 클래스 수에 맞게 최종 분류층 교체</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span> <span class="o">=</span> <span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">Sequential</span><span class="p">()</span>
<span class="k">for</span> <span class="n">layer</span> <span class="ow">in</span> <span class="n">base_model</span><span class="p">.</span><span class="n">layers</span><span class="p">[:</span><span class="o">-</span><span class="mi">1</span><span class="p">]:</span>  <span class="c1"># go through until last layer
</span>  <span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">layer</span><span class="p">)</span>
<span class="c1"># 마지막 layer의 최종 분류 개수를 클래스 개수와 맞게 설정
</span><span class="n">model</span><span class="p">.</span><span class="n">add</span><span class="p">(</span><span class="n">keras</span><span class="p">.</span><span class="n">layers</span><span class="p">.</span><span class="n">Dense</span><span class="p">(</span><span class="n">num_classes</span><span class="p">,</span> <span class="n">activation</span><span class="o">=</span><span class="s">'softmax'</span><span class="p">,</span> <span class="n">name</span><span class="o">=</span><span class="s">'predictions'</span><span class="p">))</span>
</code></pre></div></div>

<h3 id="모델-아키텍처-살펴보기">모델 아키텍처 살펴보기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="n">summary</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Model: "sequential"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
block1_conv1 (Conv2D)        (None, 224, 224, 64)      1792      
_________________________________________________________________
block1_conv2 (Conv2D)        (None, 224, 224, 64)      36928     
_________________________________________________________________
block1_pool (MaxPooling2D)   (None, 112, 112, 64)      0         
_________________________________________________________________
block2_conv1 (Conv2D)        (None, 112, 112, 128)     73856     
_________________________________________________________________
block2_conv2 (Conv2D)        (None, 112, 112, 128)     147584    
_________________________________________________________________
block2_pool (MaxPooling2D)   (None, 56, 56, 128)       0         
_________________________________________________________________
block3_conv1 (Conv2D)        (None, 56, 56, 256)       295168    
_________________________________________________________________
block3_conv2 (Conv2D)        (None, 56, 56, 256)       590080    
_________________________________________________________________
block3_conv3 (Conv2D)        (None, 56, 56, 256)       590080    
_________________________________________________________________
block3_pool (MaxPooling2D)   (None, 28, 28, 256)       0         
_________________________________________________________________
block4_conv1 (Conv2D)        (None, 28, 28, 512)       1180160   
_________________________________________________________________
block4_conv2 (Conv2D)        (None, 28, 28, 512)       2359808   
_________________________________________________________________
block4_conv3 (Conv2D)        (None, 28, 28, 512)       2359808   
_________________________________________________________________
block4_pool (MaxPooling2D)   (None, 14, 14, 512)       0         
_________________________________________________________________
block5_conv1 (Conv2D)        (None, 14, 14, 512)       2359808   
_________________________________________________________________
block5_conv2 (Conv2D)        (None, 14, 14, 512)       2359808   
_________________________________________________________________
block5_conv3 (Conv2D)        (None, 14, 14, 512)       2359808   
_________________________________________________________________
block5_pool (MaxPooling2D)   (None, 7, 7, 512)         0         
_________________________________________________________________
flatten (Flatten)            (None, 25088)             0         
_________________________________________________________________
fc1 (Dense)                  (None, 4096)              102764544 
_________________________________________________________________
fc2 (Dense)                  (None, 4096)              16781312  
_________________________________________________________________
predictions (Dense)          (None, 10)                40970     
=================================================================
Total params: 134,301,514
Trainable params: 134,301,514
Non-trainable params: 0
_________________________________________________________________
</code></pre></div></div>

<h3 id="모델-컴파일">모델 컴파일</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">model</span><span class="p">.</span><span class="nb">compile</span><span class="p">(</span><span class="n">optimizer</span><span class="o">=</span><span class="n">tf</span><span class="p">.</span><span class="n">keras</span><span class="p">.</span><span class="n">optimizers</span><span class="p">.</span><span class="n">Adam</span><span class="p">(</span><span class="n">learning_rate</span><span class="o">=</span><span class="n">learning_Rate</span><span class="p">),</span>
              <span class="n">loss</span><span class="o">=</span><span class="s">'sparse_categorical_crossentropy'</span><span class="p">,</span>
              <span class="n">metrics</span><span class="o">=</span><span class="p">[</span><span class="s">'accuracy'</span><span class="p">])</span>
</code></pre></div></div>

<h3 id="모델-훈련">모델 훈련</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">history</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">fit</span><span class="p">(</span><span class="n">train_batches</span><span class="p">,</span>
                    <span class="n">epochs</span> <span class="o">=</span> <span class="n">EPOCHS</span><span class="p">,</span>
                    <span class="n">validation_data</span> <span class="o">=</span> <span class="n">validation_batches</span><span class="p">,</span>
                    <span class="n">batch_size</span> <span class="o">=</span> <span class="n">BATCH_SIZE</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Epoch 1/3
352/352 [==============================] - 653s 2s/step - loss: 7.8123 - accuracy: 0.1631 - val_loss: 1.6607 - val_accuracy: 0.3758
Epoch 2/3
352/352 [==============================] - 639s 2s/step - loss: 1.6642 - accuracy: 0.3859 - val_loss: 1.4719 - val_accuracy: 0.4530
Epoch 3/3
352/352 [==============================] - 640s 2s/step - loss: 1.5031 - accuracy: 0.4482 - val_loss: 1.3695 - val_accuracy: 0.5024
</code></pre></div></div>

<h3 id="학습곡선-그리기">학습곡선 그리기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">acc</span> <span class="o">=</span> <span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'accuracy'</span><span class="p">]</span>
<span class="n">val_acc</span> <span class="o">=</span> <span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_accuracy'</span><span class="p">]</span>

<span class="n">loss</span> <span class="o">=</span> <span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'loss'</span><span class="p">]</span>
<span class="n">val_loss</span> <span class="o">=</span> <span class="n">history</span><span class="p">.</span><span class="n">history</span><span class="p">[</span><span class="s">'val_loss'</span><span class="p">]</span>

<span class="n">plt</span><span class="p">.</span><span class="n">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">8</span><span class="p">,</span> <span class="mi">8</span><span class="p">))</span>
<span class="n">plt</span><span class="p">.</span><span class="n">subplot</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">acc</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="s">'Training Accuracy'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">plot</span><span class="p">(</span><span class="n">val_acc</span><span class="p">,</span> <span class="n">label</span> <span class="o">=</span> <span class="s">'Validation Accuracy'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">legend</span><span class="p">(</span><span class="n">loc</span> <span class="o">=</span> <span class="s">'lower right'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylabel</span><span class="p">(</span><span class="s">'Accuracy'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="n">ylim</span><span class="p">([</span><span class="nb">min</span><span class="p">(</span><span class="n">plt</span><span class="p">.</span><span class="n">ylim</span><span class="p">()),</span> <span class="mi">1</span><span class="p">])</span>
<span class="n">plt</span><span class="p">.</span><span class="n">title</span><span class="p">(</span><span class="s">'Training and Validation Accuracy'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Text(0.5, 1.0, 'Training and Validation Accuracy')
</code></pre></div></div>

<p><img src="/image/VGGNet16_Training%28Tensorflow_Version%29_files/VGGNet16_Training%28Tensorflow_Version%29_23_1.png" alt="png" /></p>

<h3 id="test-set으로-학습된-모델-테스트">Test Set으로 학습된 모델 테스트</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">loss_and_metrics</span> <span class="o">=</span> <span class="n">model</span><span class="p">.</span><span class="n">evaluate</span><span class="p">(</span><span class="n">test_batches</span><span class="p">,</span> <span class="n">batch_size</span><span class="o">=</span><span class="mi">64</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="s">"테스트 성능 : {}%"</span><span class="p">.</span><span class="nb">format</span><span class="p">(</span><span class="nb">round</span><span class="p">(</span><span class="n">loss_and_metrics</span><span class="p">[</span><span class="mi">1</span><span class="p">]</span><span class="o">*</span><span class="mf">100.4</span><span class="p">)))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>79/79 [==============================] - 36s 458ms/step - loss: 1.3686 - accuracy: 0.5044
테스트 성능 : 51%
</code></pre></div></div>

:ET