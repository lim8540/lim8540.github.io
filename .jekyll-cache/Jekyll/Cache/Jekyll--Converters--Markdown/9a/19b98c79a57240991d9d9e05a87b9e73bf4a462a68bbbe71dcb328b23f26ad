I"U<h2 id="boardcover-문제-개요">BOARDCOVER 문제 개요</h2>

<h4 id="문제">문제</h4>

<p><img src="http://algospot.com/media/judge-attachments/2b7bfee35cbec2f4e799bb011ac18f69/03.png" alt="example" title="exmaple" /><br />
안드로메다 유치원 익스프레스반에서는 다음 주에 율동공원으로 소풍을 갑니다. 원석 선생님은 소풍 때 학생들을 두 명씩 짝을 지어 행동하게 하려고 합니다. 그런데 서로 친구가 아닌 학생들끼리 짝을 지어 주면 서로 싸우거나 같이 돌아다니지 않기 때문에, 항상 서로 친구인 학생들끼리만 짝을 지어 줘야 합니다.</p>

<p>각 학생들의 쌍에 대해 이들이 서로 친구인지 여부가 주어질 때, 학생들을 짝지어줄 수 있는 방법의 수를 계산하는 프로그램을 작성하세요. 짝이 되는 학생들이 일부만 다르더라도 다른 방법이라고 봅니다. 예를 들어 다음 두 가지 방법은 서로 다른 방법입니다.</p>

<p>(태연,제시카) (써니,티파니) (효연,유리)
(태연,제시카) (써니,유리) (효연,티파니)
입력
입력의 첫 줄에는 테스트 케이스의 수 C (C &lt;= 50) 가 주어집니다. 각 테스트 케이스의 첫 줄에는 학생의 수 n (2 &lt;= n &lt;= 10) 과 친구 쌍의 수 m (0 &lt;= m &lt;= n*(n-1)/2) 이 주어집니다. 그 다음 줄에 m 개의 정수 쌍으로 서로 친구인 두 학생의 번호가 주어집니다. 번호는 모두 0 부터 n-1 사이의 정수이고, 같은 쌍은 입력에 두 번 주어지지 않습니다. 학생들의 수는 짝수입니다.</p>

<h4 id="출력">출력</h4>
<p>각 테스트 케이스마다 한 줄에 모든 학생을 친구끼리만 짝지어줄 수 있는 방법의 수를 출력합니다.</p>

<h4 id="예제-입력">예제 입력</h4>
<p>3<br />
2 1 <br />
0 1 <br />
4 6<br />
0 1 1 2 2 3 3 0 0 2 1 3<br />
6 10<br />
0 1 0 2 1 2 1 3 1 4 2 3 2 4 3 4 3 5 4 5</p>

<h4 id="예제-출력">예제 출력</h4>
<p>1<br />
3<br />
4</p>

<p>출처: <a href="https://algospot.com/judge/problem/read/PICNIC">Algospot</a></p>

<h2 id="구현">구현</h2>

<h4 id="설계">설계</h4>
<p>교재에서 배운 방법으로 함수를 재귀적으로 구성하여 만들기로 하였다. 구현을 디자인하기 전에 고려한 내용은 다음과 같았다.</p>

<ol>
  <li>학생 수만 정해지면 학생 구성원이 정해져 따로 신경쓸 필요가 없다는점. 설명하기가 어렵지만 처음에 구현을 하려고 할 때 학생 수와 구성원을 따로 생각하면서 시작했는데, 그럴 필요가 없다.(쓰고나니까 나도 무슨말인지 모르겠다. 처음 구현할 때는 나름 중요하다고 생각했는데)</li>
  <li>한명이라도 쌍을 구할 수 없으면, 그 조합은 불가능한 조합이다.(이것도 당연하게 들리지만, 이 개념이 구현을 쉽게 만들어준다.)</li>
</ol>

<h4 id="전체-코드">전체 코드</h4>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
</span><span class="k">using</span> <span class="k">namespace</span> <span class="n">std</span><span class="p">;</span>
<span class="kt">int</span> <span class="n">TestCase</span><span class="p">,</span><span class="n">NumOfStudent</span><span class="p">,</span> <span class="n">NumOfMatching</span><span class="p">,</span> <span class="n">Answer</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">matched</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">matchable</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">];</span>


<span class="kt">void</span> <span class="nf">PicnicMatching</span><span class="p">(</span><span class="kt">bool</span><span class="o">*</span> <span class="n">matched</span><span class="p">,</span> <span class="kt">bool</span><span class="p">(</span><span class="o">*</span><span class="n">matchable</span><span class="p">)[</span><span class="mi">10</span><span class="p">],</span> <span class="kt">int</span> <span class="n">toPick</span><span class="p">)</span>
<span class="p">{</span>

    <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">toPick</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Answer</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">NumOfStudent</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">matched</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">num1</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="n">num2</span> <span class="o">=</span> <span class="n">num1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="n">NumOfStudent</span><span class="p">;</span> <span class="n">num2</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">matched</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">matchable</span><span class="p">[</span><span class="n">num1</span><span class="p">][</span><span class="n">num2</span><span class="p">]</span> <span class="o">|</span> <span class="n">matchable</span><span class="p">[</span><span class="n">num2</span><span class="p">][</span><span class="n">num1</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">PicnicMatching</span><span class="p">(</span><span class="n">matched</span><span class="p">,</span> <span class="n">matchable</span><span class="p">,</span> <span class="n">toPick</span> <span class="o">-</span> <span class="mi">2</span><span class="p">);</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>


<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">TestCase</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">TestCase</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">NumOfStudent</span> <span class="o">&gt;&gt;</span> <span class="n">NumOfMatching</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="n">matched</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
        <span class="kt">bool</span> <span class="n">matchable</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
        <span class="n">Answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">NumOfMatching</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">num1</span> <span class="o">&gt;&gt;</span> <span class="n">num2</span><span class="p">;</span>
            <span class="n">matchable</span><span class="p">[</span><span class="n">num1</span><span class="p">][</span><span class="n">num2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>


        <span class="n">PicnicMatching</span><span class="p">(</span><span class="n">matched</span><span class="p">,</span> <span class="n">matchable</span><span class="p">,</span> <span class="n">NumOfStudent</span><span class="p">);</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">Answer</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<h4 id="main함수">main함수</h4>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="kt">int</span> <span class="n">TestCase</span><span class="p">,</span><span class="n">NumOfStudent</span><span class="p">,</span> <span class="n">NumOfMatching</span><span class="p">,</span> <span class="n">Answer</span><span class="p">;</span>
<span class="kt">bool</span> <span class="n">matched</span><span class="p">[</span><span class="mi">10</span><span class="p">];</span>
<span class="kt">bool</span> <span class="n">matchable</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">];</span>

<span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">void</span><span class="p">)</span>
<span class="p">{</span>
    <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">TestCase</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">TestCase</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">NumOfStudent</span> <span class="o">&gt;&gt;</span> <span class="n">NumOfMatching</span><span class="p">;</span>
        <span class="kt">bool</span> <span class="n">matched</span><span class="p">[</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
        <span class="kt">bool</span> <span class="n">matchable</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="p">{</span><span class="mi">0</span><span class="p">};</span>
        <span class="n">Answer</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>

        <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">;</span>
        <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">j</span> <span class="o">&lt;</span> <span class="n">NumOfMatching</span><span class="p">;</span> <span class="n">j</span><span class="o">++</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">cin</span> <span class="o">&gt;&gt;</span> <span class="n">num1</span> <span class="o">&gt;&gt;</span> <span class="n">num2</span><span class="p">;</span>
            <span class="n">matchable</span><span class="p">[</span><span class="n">num1</span><span class="p">][</span><span class="n">num2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="p">}</span>


        <span class="n">PicnicMatching</span><span class="p">(</span><span class="n">matched</span><span class="p">,</span> <span class="n">matchable</span><span class="p">,</span> <span class="n">NumOfStudent</span><span class="p">);</span>
        <span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">Answer</span><span class="o">&lt;&lt;</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<p>자료구조를 어떤걸 쓸가 고민하다가 주어진 학생수가 얼마 되지 않는다는점을 이용하여 단순한 배열로 하였다. matched 배열은 가능한 경우의 수를 추적하는 과정에서 짝이 이루어진 학생을 1로 표시하도록 하는 것이고, matchable은 문제에서 주어지는 matching가능한 짝을 나타내는 배열이다.<br />
메인함수의 나머지 부분은 입력을 받아서 처리하는 간단한 부분이다.</p>

<h4 id="recursive-함수picninmatching">Recursive 함수(PicninMatching)</h4>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">void</span> <span class="nf">PicnicMatching</span><span class="p">(</span><span class="kt">bool</span><span class="o">*</span> <span class="n">matched</span><span class="p">,</span> <span class="kt">bool</span><span class="p">(</span><span class="o">*</span><span class="n">matchable</span><span class="p">)[</span><span class="mi">10</span><span class="p">],</span> <span class="kt">int</span> <span class="n">toPick</span><span class="p">)</span>
<span class="p">{</span>

    <span class="kt">int</span> <span class="n">num1</span><span class="p">,</span> <span class="n">num2</span><span class="p">;</span>
    <span class="k">if</span><span class="p">(</span><span class="n">toPick</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="n">Answer</span> <span class="o">+=</span> <span class="mi">1</span><span class="p">;</span>
        <span class="k">return</span><span class="p">;</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">NumOfStudent</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">matched</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">==</span> <span class="mi">0</span><span class="p">)</span>
        <span class="p">{</span>
            <span class="n">num1</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span>
            <span class="k">break</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">for</span><span class="p">(</span><span class="n">num2</span> <span class="o">=</span> <span class="n">num1</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span> <span class="n">num2</span> <span class="o">&lt;</span> <span class="n">NumOfStudent</span><span class="p">;</span> <span class="n">num2</span><span class="o">++</span><span class="p">)</span>
    <span class="p">{</span>
        <span class="k">if</span><span class="p">(</span><span class="n">matched</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">){}</span>
        <span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="n">matchable</span><span class="p">[</span><span class="n">num1</span><span class="p">][</span><span class="n">num2</span><span class="p">]</span> <span class="o">|</span> <span class="n">matchable</span><span class="p">[</span><span class="n">num2</span><span class="p">][</span><span class="n">num1</span><span class="p">])</span>
        <span class="p">{</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span>
            <span class="n">PicnicMatching</span><span class="p">(</span><span class="n">matched</span><span class="p">,</span> <span class="n">matchable</span><span class="p">,</span> <span class="n">toPick</span> <span class="o">-</span> <span class="mi">2</span><span class="p">);</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num1</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
            <span class="n">matched</span><span class="p">[</span><span class="n">num2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
        <span class="p">}</span>
    <span class="p">}</span>
    <span class="k">return</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<p>재귀함수를 한번씩 더 돌릴때마다 toPick을 -2씩 감소시키므로 0이되면 한 세트가 완성된 것을 의미하므로 이때, Answer값을 1올린다.<br />
첫 번째 for문에서는 matched가 0인 값 즉 매칭에 아직 들어가지 않은 값중 가작 작은 값을 하나 고른다. 여기서 위에서 말한 2번이 적용되는데, 처음에는 남은 학생을 전부 검토해봐야 하는것 아닌가? 라는 생각을 했었는데 하나라도 실패하면 의미가 없기 때문에 한명의 학생만 검토하면 된다는 결론이 나온다.<br />
그 다음 for문에서는 하나를 고르고 남은 학생들 중에서 아직 선택되지 않은 학생 한명을 골라서 매칭 가능한 경우를 찾고 있다면, 두 학생을 선택하여 나머지를 다시 함수에 넣는다. 리턴 되어서 나온 후에는 선택한 2명을 해제하고 다른 쌍을 계속 찾도록 한다.
<br /></p>

<h2 id="정리">정리</h2>
<p>c++코딩을 너무 오랜만에 해서 데이터 입출력부터 시작해서 익숙해지는데 오래걸렸다. C++책도 찾고 인터넷 검색도 하면서 다시 감을 찾기까지가 엄청난 시간이 걸렸다. 구현 내용과 관련해서는 처음 재귀함수가 가져가는 변수에 matched, matchable배열을 넣지 않았는데 이때 글로벌 변수들이 초기화 되는 현상이 나타났다. 이는 다음에 공부해봐야 겠다. 이거 말고도 처음에 자료구조를 vector로 사용하려고 시도했다가 잘 안됐고, 뭐 여러 시행착오가 있었다. 엄청 시행착오가 많았던 것 같은데 구현 끝나니까 기억이 잘 안난다 ㅎ 아무튼 시작이 반이라고 시작했으니까 반한거겠지.</p>

<p>끝!</p>
:ET