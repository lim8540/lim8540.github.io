I"/;<h2 id="jupyter-notebook">Jupyter Notebook</h2>

<ol>
  <li>Terminal에서 jupyter notebook을 입력함으로써 시작한다.</li>
  <li>jupyter모드에는 두가지 모드가 있다. 초록색 테두리는 입력모드, 파란색 테두리는 명령모드를 나타낸다.</li>
  <li>python입력 -&gt; Markdown으로 바꿔주는 방법. esc를 통해 명령모드로 넘어가서 m을 눌러준다. 반대의 경우 esc를 누르고 y를 눌러준다.</li>
  <li>cell추가하기는 명령모드에서 A(above)는 현재 cell위에 새로운 cell추가 B(below)는 현재 cell 아래에 새로운 cell 추가. 셀을 삭제할때는 명령모드에서 dd를 눌러준다.</li>
</ol>

<h2 id="markdown문법">MarkDown문법</h2>
<ol>
  <li>Header는 #, ##, ###, …
    <h5 id="header">header</h5>
  </li>
  <li>Italic는 *글자* , _글자_ <br />
<em>글자</em></li>
  <li>bold채는 **글자**, __글자__ <br />
<strong>글자</strong></li>
  <li>StrikeThrough(찍찍긋기)는 ~~글자글자~~ <br />
 <del>글자글자</del></li>
  <li>Unordered List는 -이나 *으로 함
    <ul>
      <li>first</li>
      <li>second</li>
      <li>third</li>
    </ul>
  </li>
  <li>Ordered Listsms 1. 2.로 함(ordered list의 서브 ordered list를 만들어 줄때는 들여쓰기를 해야함)
    <ol>
      <li>one</li>
      <li>two</li>
      <li>three</li>
    </ol>
  </li>
</ol>

<h2 id="실습-numpy-시작하기">실습 (Numpy 시작하기)</h2>

<h3 id="remind--리스트">Remind : 리스트</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="s">"two"</span><span class="p">,</span> <span class="mf">3.0</span><span class="p">]</span>

<span class="k">print</span><span class="p">(</span><span class="n">arr</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[1, 'two', 3.0]
</code></pre></div></div>

<h3 id="numpy-모듈-불러오기">numpy 모듈 불러오기</h3>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
</code></pre></div></div>

<h3 id="왜-numpy를-사용하야-할까요">왜 numpy를 사용하야 할까요?</h3>

<p><strong>List</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">L</span> <span class="o">=</span> <span class="nb">range</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>

<span class="o">%</span><span class="n">timeit</span> <span class="p">[</span><span class="n">i</span><span class="o">**</span><span class="mi">2</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">L</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>229 µs ± 5.88 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
</code></pre></div></div>

<p><strong>numpy.array</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">N</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">arange</span><span class="p">(</span><span class="mi">1000</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="o">%</span><span class="n">timeit</span> <span class="n">N</span> <span class="o">**</span> <span class="mi">2</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>906 ns ± 9.9 ns per loop (mean ± std. dev. of 7 runs, 1000000 loops each)
</code></pre></div></div>

<h3 id="numpyarray">numpy.array</h3>
<p><strong>numpy의 Container, array</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">])</span>

<span class="n">arr</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([1, 2, 3])
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr_2d</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">],</span> <span class="p">[</span><span class="mi">4</span><span class="p">,</span><span class="mi">5</span><span class="p">,</span><span class="mi">6</span><span class="p">],</span> <span class="p">[</span><span class="mi">7</span><span class="p">,</span><span class="mi">8</span><span class="p">,</span><span class="mi">9</span><span class="p">]])</span>

<span class="n">arr_2d</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>array([[1, 2, 3],
       [4, 5, 6],
       [7, 8, 9]])
</code></pre></div></div>

<p><strong>array의 차원을 아는 방법</strong></p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(3,)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">arr_2d</span><span class="p">.</span><span class="n">shape</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(3, 3)
</code></pre></div></div>

<h2 id="jupyter-notebook-파일을-markdown파일로-바꾸는-명령어">jupyter Notebook 파일을 Markdown파일로 바꾸는 명령어</h2>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jupyter nbconvert --to markdown notebook.ipynb

</code></pre></div></div>
<p>notebook파일이 있는 경로에서 위의 명령어를 입력하면 같은 이름의 markdown문서가 만들어진다.</p>

<h2 id="numpy실습선형시스템">Numpy실습(선형시스템)</h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="nn">numpy</span> <span class="k">as</span> <span class="n">np</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 행렬 코딩
</span><span class="n">A</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([[</span><span class="mi">3</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span><span class="o">-</span><span class="mi">1</span><span class="p">],</span> <span class="p">[</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">]])</span>
<span class="k">print</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">shape</span><span class="p">(</span><span class="n">A</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[ 3  1  1]
 [ 1 -2 -1]
 [ 1  1  1]]
(3, 3)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 벡터 코딩
</span><span class="n">b</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">array</span><span class="p">([</span><span class="mi">4</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">])</span>

<span class="k">print</span><span class="p">(</span><span class="n">b</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">shape</span><span class="p">(</span><span class="n">b</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[4 1 2]
(3,)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 역행렬 구하기
</span><span class="n">A_inv</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">linalg</span><span class="p">.</span><span class="n">inv</span><span class="p">(</span><span class="n">A</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">A_inv</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">shape</span><span class="p">(</span><span class="n">A_inv</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[[ 5.00000000e-01 -7.40148683e-17 -5.00000000e-01]
 [ 1.00000000e+00 -1.00000000e+00 -2.00000000e+00]
 [-1.50000000e+00  1.00000000e+00  3.50000000e+00]]
(3, 3)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 역행렬을 이용한 선형시스템 Ax=b의 해 구하기
</span><span class="n">x</span> <span class="o">=</span> <span class="n">A_inv</span> <span class="o">@</span> <span class="n">b</span>

<span class="k">print</span><span class="p">(</span><span class="n">x</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">shape</span><span class="p">(</span><span class="n">x</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[ 1. -1.  2.]
(3,)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># 결과 검증
# bb = np.matmul(A,x)
</span><span class="n">bb</span> <span class="o">=</span> <span class="n">A</span> <span class="o">@</span> <span class="n">x</span>

<span class="k">print</span><span class="p">(</span><span class="n">bb</span><span class="p">)</span>
<span class="k">print</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">shape</span><span class="p">(</span><span class="n">bb</span><span class="p">))</span>

<span class="c1"># 실제 결과와의 차이가 얼마나 나는지 확인
</span><span class="k">if</span> <span class="n">np</span><span class="p">.</span><span class="n">linalg</span><span class="p">.</span><span class="n">norm</span><span class="p">(</span><span class="n">b</span><span class="o">-</span><span class="n">bb</span><span class="p">)</span> <span class="o">&lt;</span> <span class="mf">1e-3</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"OK"</span><span class="p">)</span>
<span class="k">else</span><span class="p">:</span>
    <span class="k">print</span><span class="p">(</span><span class="s">"something wrong"</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[4. 1. 2.]
(3,)
OK
</code></pre></div></div>

<h2 id="가우스-소거법">가우스 소거법</h2>

<h3 id="선형시스템의-해">선형시스템의 해</h3>
<p>가장 간단한 형태의 linear system(선형 시스템) ax = b 문제를 살펴보자.</p>
<ol>
  <li>해가 하나인 경우 : 3x = 6</li>
  <li>해가 없는 경우 : 0x = 6</li>
  <li>해가 여러개인 경우 : 0x = 0</li>
</ol>

<ul>
  <li>a = 0 이면 특이하다.
    <ul>
      <li>ax = b의 해가 곧장 나오지 않는다. 왜?</li>
      <li>a의 역수(inverse)가 존재하지 않는 경우, a가 특이(singular)하다고 한다.</li>
    </ul>
  </li>
  <li>해가 있으면 선형시스템이 consistent하다고 한다.(1,3경우)</li>
  <li>해가 없으면 선형 시스템이 inconsistent하다고 한다.(2경우)</li>
</ul>

<p>이를 다차원으로 확장 시켜도 변하지 않는 특징이다. <br />
linear system Ax = b에서도 다음이 성립한다.</p>
<ul>
  <li><del>a = 0 이면 특이하다.</del>
    <ul>
      <li>A의 역행렬(inverse matrix)가 존재하지 않는 경우, A가 특이(singular)하다고 한다.</li>
    </ul>
  </li>
  <li>해가 있으면 선형시스템이 consistent하다고 한다.</li>
  <li>해가 없으면 선형 시스템이 inconsistent하다고 한다.</li>
</ul>

<h3 id="가우스-소거법gauss-elimination">가우스 소거법(Gauss elimination)</h3>
<p>Gauss elimination은 임의의 m x n 선형 시스템의 해를 구하는 가장 대표적인 방법이다.
   Gauss elimination은 다음의 두 단계로 진행된다.</p>
<ol>
  <li>Forward Elimination(전방 소거법) : 주어진 선형 시스템을 아래로 갈수록 더 단순한 형태의 선형 방정식을 가지도록 변항한다.</li>
  <li>back-substitution(후방 대입법) : 아래에서부터 위로 미지수를 실제값으로 대체한다.</li>
</ol>

<p>a b c <br />
d e f <br />
g h i <br />
와 같은 행렬을 단순하게 <br />
a b c <br />
0 j k <br />
0 0 n <br />
의 형태와 같이 단순하게 바꾸어 주는 작업을 전방 소거법(forward elimination)이라고 한다. 그 후 아래부터 단순해진 방정식의 해를 하나씩 구하는 작업을 후방 대입법(back-substitution)이라고 한다.
|1 2 1| |x1|
|1 2 3| |x2|
|2 3 -1| |x3|</p>
:ET